<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming, pyvenv on Rafael Tieppo</title>
    <link>/tags/programming-pyvenv/</link>
    <description>Recent content in programming, pyvenv on Rafael Tieppo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2021 &lt;a href=&#39;http://creativecommons.org/licenses/by-nc-sa/4.0/&#39;&gt;Licensed CC:By-NC-SA&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 26 Jul 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/programming-pyvenv/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ambiente virtual em Python</title>
      <link>/post/2021_07_27_python_env/</link>
      <pubDate>Mon, 26 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021_07_27_python_env/</guid>
      <description>Um dos objetivos do ambiente virtual é auxiliar no gerenciamento das dependências exigidas nos projetos. Um exemplo prático seria a necessidade de testar um código em uma versão antiga de um determinado pacote (ou biblioteca), sendo que na sua máquina esteja instalada a versão mais recente deste pacote. Para evitar algum possível conflito de versões, e possíveis danos no seu sistema operacional, é possível criar um ambiente virtual que deixará isolado os pacotes antigos necessários.</description>
    </item>
    
  </channel>
</rss>